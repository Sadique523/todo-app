{"version":3,"sources":["firebase.js","screens/home.js","screens/todo.js","screens/addTodo.js","App.js","web-build/register-service-worker.js","assets/avatar.png","assets/fonts/RubikMonoOne-Regular.ttf"],"names":["firebaseAppAuth","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","auth","providers","googleProvider","GoogleAuthProvider","signInAnonymously","catch","error","code","message","Home","navigation","useState","personalTodos","setPersonalTodosList","workTodos","setWorkTodosList","personalCompleted","setPersonalCompleted","workCompleted","setWorkCompleted","useFocusEffect","value","database","ref","once","snapshot","val","array","Object","keys","forEach","item","push","checked","View","style","styles","containerStyles","LinearGradient","colors","linearGradient","innerContainerStyles","Text","textStyles","todoContainer","avatarWrapper","Image","avatarStyles","source","require","greetingStyles","infoContainer","infoTextStyles","length","ScrollView","cardContainerStyles","horizontal","TouchableOpacity","onPress","navigate","type","cardStyles","cardAvatarStyles","name","size","color","cardTaskInfoStyles","cardTaskTypeInfoStyles","progress","progressBarStyles","StyleSheet","create","flex","alignItems","padding","margin","marginBottom","width","height","borderWidth","borderColor","borderRadius","justifyContent","backgroundColor","elevation","resizeMode","fontSize","marginTop","fontWeight","fontFamily","opacity","avatar2Styles","Todo","route","React","todos","setTodosList","completed","setCompleted","loading","setLoading","todoType","params","useEffect","toggleTodo","todoList","set","then","data","console","log","infoContainerStyles","text2Styles","todoListContainer","map","todo","todoStyles","status","id","newtodoArray","filter","filterItems","todoTextStyles","content","fab","medium","icon","todosLength","paddingBottom","flexDirection","borderBottomWidth","borderBottomColor","paddingLeft","position","right","bottom","setTodo","TextInput","textInputStyles","multiline","numberOfLines","onChangeText","text","buttonStyles","mode","update","focus","addTodo","Stack","createStackNavigator","withFirebaseAuth","Font","Rubik","StatusBar","hidden","NavigationContainer","Navigator","initialRouteName","Screen","options","headerShown","component","ToDo","title","headerStyle","AddTodo","navigator","window","addEventListener","serviceWorker","register","scope","info","module","exports"],"mappings":"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","file":"static/js/app.6d25f114.chunk.js","sourcesContent":["import firebase from \"firebase\";\n\nconst config = {\n  apiKey: \"AIzaSyBikYybI933v_jwoDzM8snIlWQI1GPFHJE\",\n  authDomain: \"auth-39cb9.firebaseapp.com\",\n  databaseURL: \"https://auth-39cb9.firebaseio.com\",\n  projectId: \"auth-39cb9\",\n  storageBucket: \"auth-39cb9.appspot.com\"\n};\n\nconst firebaseApp = firebase.initializeApp(config);\nexport const firebaseAppAuth = firebaseApp.auth();\nexport const providers = {\n  googleProvider: new firebase.auth.GoogleAuthProvider()\n};\n\nfirebase.auth().signInAnonymously().catch(function(error) {\n    // Handle Errors here.\n    var errorCode = error.code;\n    var errorMessage = error.message;\n    // ...\n});\n  ","import React, { useEffect, useState } from 'react';\nimport {\n  View,\n  Text,\n  StyleSheet,\n  Image,\n  ScrollView,\n  TouchableOpacity,\n} from 'react-native';\nimport {ProgressBar} from 'react-native-paper';\nimport { useFocusEffect } from '@react-navigation/native';\n\nimport firebase from \"firebase\";\nimport { LinearGradient } from 'expo-linear-gradient';\n\nimport Icon from 'react-native-vector-icons/AntDesign';\n\nexport default function Home({navigation}) {\n\n    const [personalTodos, setPersonalTodosList] = useState([]);\n    const [workTodos, setWorkTodosList] = useState([]);\n    const [personalCompleted, setPersonalCompleted] = useState(0);\n    const [workCompleted, setWorkCompleted] = useState(0);\n\n    useFocusEffect(() => {\n        let value = {};\n        firebase\n        .database()\n        .ref(`todo/personal`)\n        .once(\"value\", function(snapshot) {\n            value = snapshot.val();\n            let array = [];\n            if (value) {\n              Object.keys(value).forEach(item => array.push(value[item]));\n              setPersonalTodosList(array);\n              let checked = 0;\n              array.forEach(item => {\n                if(item.checked) {\n                  checked++; \n                }\n              })\n              setPersonalCompleted(checked);\n            }\n            else {\n                setPersonalTodosList([]);\n                setPersonalCompleted(0);\n            }\n        });\n      }, []);\n\n      useFocusEffect(() => {\n        let value = {};\n        firebase\n        .database()\n        .ref(`todo/work`)\n        .once(\"value\", function(snapshot) {\n            value = snapshot.val();\n            let array = [];\n            if (value) {\n              Object.keys(value).forEach(item => array.push(value[item]));\n              setWorkTodosList(array);\n              let checked = 0;\n              array.forEach(item => {\n                if(item.checked) {\n                  checked++; \n                }\n              })\n              setWorkCompleted(checked);\n            }\n            else {\n                setWorkTodosList([]);\n                setWorkCompleted(0);\n            }\n        });\n      }, []);\n    \n\n    return (\n        <View style={styles.containerStyles}>\n        <LinearGradient\n            colors={['#F8A05A', '#f4736a']}\n            style={styles.linearGradient}>\n            <View style={styles.innerContainerStyles}>\n                <Text style={styles.textStyles}>TODO</Text>\n            </View>\n            <View style={styles.todoContainer}>\n            <View style={styles.avatarWrapper}>\n                <Image\n                style={styles.avatarStyles}\n                source={require('../assets/avatar.png')}\n                />\n            </View>\n            <View>\n                <Text style={styles.greetingStyles}>Hello, Sadique.</Text>\n                <View style={styles.infoContainer}>\n                <Text style={styles.infoTextStyles}>\n                    Looks like you feel good!\n                </Text>\n                <Text style={styles.infoTextStyles}>\n                    You have {(personalTodos.length - personalCompleted) + (workTodos.length - workCompleted)} tasks to do today\n                </Text>\n                </View>\n            </View>\n            </View>\n            <ScrollView style={styles.cardContainerStyles} horizontal={true}>\n            <TouchableOpacity onPress={() => navigation.navigate('ToDo', { type: 'personal'})}>\n                <View\n                style={styles.cardStyles}\n                >\n                <View style={styles.cardAvatarStyles}>\n                    <Icon name=\"rocket1\" size={24} color=\"#F8A05A\" />\n                </View>\n                <View>\n                    <Text style={styles.cardTaskInfoStyles}>{personalTodos.length} Tasks</Text>\n                    <Text style={styles.cardTaskTypeInfoStyles}>Personal</Text>\n                    <ProgressBar\n                    progress={personalCompleted/ personalTodos.length}\n                    color=\"#F8A05A\"\n                    style={styles.progressBarStyles}\n                    />\n                </View>\n                </View>\n            </TouchableOpacity>\n            <TouchableOpacity onPress={() => navigation.navigate('ToDo',  { type: 'work'})}>\n                <View\n                style={styles.cardStyles}>\n                <View style={styles.cardAvatarStyles}>\n                    <Icon name=\"laptop\" size={24} color=\"#F8A05A\" />\n                </View>\n                <View>\n                    <Text style={styles.cardTaskInfoStyles}>{workTodos.length} Tasks</Text>\n                    <Text style={styles.cardTaskTypeInfoStyles}>Work</Text>\n                    <ProgressBar\n                    progress={workCompleted/ workTodos.length}\n                    color=\"#F8A05A\"\n                    style={styles.progressBarStyles}\n                    />\n                </View>\n                </View>\n            </TouchableOpacity>\n            </ScrollView>\n        </LinearGradient>\n        </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n  containerStyles: {\n    flex: 1,\n  },\n  linearGradient: {\n    flex: 1,\n  },\n  innerContainerStyles: {\n    alignItems: 'center',\n    padding: 10,\n  },\n  todoContainer: {\n    margin: 50,\n    marginBottom: 20,\n  },\n  cardAvatarStyles: {\n    width: 40,\n    height: 40,\n    borderWidth: 1,\n    borderColor: '#F8A05A',\n    borderRadius: 50,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  avatarWrapper: {\n    backgroundColor: 'green',\n    width: 40,\n    height: 40,\n    borderRadius: 100,\n    elevation: 20,\n  },\n  avatarStyles: {\n    width: 40,\n    height: 40,\n    resizeMode: 'cover',\n    borderRadius: 100,\n  },\n  greetingStyles: {\n    fontSize: 24,\n    marginTop: 20,\n    fontWeight: '600',\n    color: '#F5F6FC',\n    fontFamily: 'Rubik'\n  },\n  infoContainer: {\n    marginTop: 10,\n  },\n  infoTextStyles: {\n    fontSize: 12,\n    color: '#F8F8F8',\n    opacity: 0.6,\n    fontFamily: 'Rubik',\n    marginTop: 5,\n  },\n  cardContainerStyles: {\n    padding: 20,\n  },\n  cardStyles: {\n    margin: 20,\n    width: 250,\n    height: 350,\n    borderRadius: 5,\n    backgroundColor: 'white',\n    justifyContent: 'space-between',\n    padding: 15,\n    elevation: 15,\n  },\n  avatar2Styles: {\n    width: 25,\n    height: 25,\n    resizeMode: 'cover',\n    borderRadius: 100,\n  },\n  cardTaskInfoStyles: {\n    fontSize: 12,\n    color: 'grey',\n    fontFamily: 'Rubik'\n  },\n  progressBarStyles: {\n    marginTop: 20,\n  },\n  cardTaskTypeInfoStyles: {\n    fontSize: 24,\n    fontWeight: '500',\n    color: 'grey',\n    fontFamily: 'Rubik'\n  },\n  textStyles: {\n    fontSize: 16,\n    color: 'white',\n    fontFamily: 'Rubik'\n  },\n});\n","import React, {useEffect} from 'react';\nimport firebase from \"firebase\";\nimport {ScrollView, View, StyleSheet, Text} from 'react-native';\nimport Icon from 'react-native-vector-icons/AntDesign';\nimport { ProgressBar, Checkbox, FAB } from 'react-native-paper';\n\nexport default function Todo({navigation, route}) {\n  const [todos, setTodosList] = React.useState([]);\n  const [completed, setCompleted] = React.useState(0);\n  const [loading, setLoading] = React.useState(true);\n  \n  const { params : { type: todoType }} = route;\n  useEffect(() => {\n      let value = {};\n      firebase\n      .database()\n      .ref(`todo/${todoType}`)\n      .once(\"value\", function(snapshot) {\n          value = snapshot.val();\n          let array = [];\n          if (value) {\n            Object.keys(value).forEach(item => array.push(value[item]));\n            setTodosList(array);\n            let checked = 0;\n            array.forEach(item => {\n              if(item.checked) {\n                checked++; \n              }\n            })\n            setCompleted(checked);\n          }\n      });\n      setLoading(false);\n   \n  }, [route.params]);\n\n  const filterItems = (id, type) => {\n    if(type === 'check') {\n      let todoArray = [ ...todos ];\n      let newtodoArray = todoArray.map((item) => {\n        if (item.id === id) {\n          return {\n            ...item,\n            checked: !item.checked\n          };\n        } else {\n          return item;\n        }\n      });\n      let checked = 0;\n      newtodoArray.forEach(item => {\n        if(item.checked) {\n          checked++; \n        }\n      })\n      setCompleted(checked);\n      setTodosList([ ...newtodoArray ]);\n      toggleTodo(newtodoArray);\n    }\n    else {\n      let todoArray = [ ...todos ];\n      let newtodoArray = todoArray.filter((item) => item.id !== id);\n      setTodosList([ ...newtodoArray ]);\n      toggleTodo(newtodoArray);\n    }\n\t};\n\n  const toggleTodo = (todoList) => {\n    firebase\n    .database()\n    .ref(`todo/${todoType}`)\n    .set({\n      ...todoList\n    })\n    .then(data => {\n      //success callback\n      console.log(\"data \", data);\n    })\n    .catch(error => {\n      //error callback\n      console.log(\"error \", error);\n    });\n  }\n  if(loading) {\n    return (\n      <View>\n        <Text>\n          Loading...\n        </Text>\n      </View>\n    )\n  }\n  return (\n    <View style={styles.containerStyles}>\n      <ScrollView>\n        <View style={styles.innerContainerStyles}>\n          <View style={styles.avatarStyles}>\n            <Icon name={todoType === 'personal' ? 'rocket1' : 'laptop'} size={24} color=\"#F8A05A\" />\n          </View>\n          <View style={styles.infoContainerStyles}>\n            <Text style={styles.textStyles}>{todos.length} Tasks</Text>\n            <Text style={styles.text2Styles}>{todoType === 'personal' ? 'Personal' : 'Work'}</Text>\n            <ProgressBar\n              progress={completed/todos.length}\n              color=\"#F8A05A\"\n              style={styles.progressBarStyles}\n            />\n          </View>\n          <View style={styles.todoContainer}>\n            <Text style={styles.textStyles}>Today</Text>\n            <View style={styles.todoListContainer}>\n             {todos.map(todo => (\n                    <View style={styles.todoStyles}>\n                      <Checkbox color=\"#000\" status={todo.checked ? 'checked' : 'unchecked'}  onPress={() => filterItems(todo.id, 'check') } />\n                      <Text style={styles.todoTextStyles}>\n                          {todo.content}\n                      </Text>\n                    </View>\n                 \n             ))}\n            </View>\n          </View>\n        </View>\n      </ScrollView>\n      <FAB\n        style={styles.fab}\n        medium\n        icon=\"plus\"\n        color=\"white\"\n        onPress={() => navigation.navigate('AddTodo', { todosLength: todos.length, todoType })}\n      />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  containerStyles: {\n    flex: 1,\n    backgroundColor: '#fff',\n  },\n  innerContainerStyles: {\n    padding: 50,\n    flex: 1,\n  },\n  avatarStyles: {\n    width: 40,\n    height: 40,\n    borderWidth: 1,\n    borderColor: '#F8A05A',\n    borderRadius: 50,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  infoContainerStyles: {\n    marginTop: 20,\n  },\n  progressBarStyles: {\n    marginTop: 20,\n  },\n  textStyles: {\n    fontSize: 12,\n    color: 'grey',\n    fontFamily: 'Rubik'\n  },\n  todoContainer: {\n    marginTop: 20,\n  },\n  text2Styles: {\n    fontSize: 24,\n    fontFamily: 'Rubik',\n    color: '#707070',\n  },\n  todoStyles: {\n    paddingBottom: 20,\n    marginBottom: 10,\n    marginTop: 10,\n    flexDirection: 'row',\n    alignItems: 'center',\n    borderBottomWidth: 1,\n    borderBottomColor: '#F8F8F8',\n  },\n  todoListContainer: {\n    marginTop: 20,\n  },\n  todoTextStyles: {\n    paddingLeft: 20,\n    fontSize: 10,\n    color: '#606060',\n    fontFamily: 'Rubik'\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 10,\n    bottom: 10,\n    backgroundColor: '#F8A05A',\n  },\n});\n","import React, { useState } from 'react';\nimport { View, StyleSheet, Text, TextInput} from 'react-native';\nimport Icon from 'react-native-vector-icons/FontAwesome';\nimport firebase from \"firebase\";\nimport {Button} from 'react-native-paper';\n\nimport * as Font from 'expo-font';\n\nexport default function Todo({route, navigation}) {\n    const [todo, setTodo] = useState('')\n    \n    const addTodo = () => {\n        const {params: { todoType}} = route;\n        firebase\n        .database()\n        .ref(`todo/${todoType}/${route.params.todosLength ? route.params.todosLength : 0}`)\n        .update({\n            id: route.params.todosLength ? route.params.todosLength : 0,\n            content: todo,\n            checked: false          \n        })\n        .then(data => {\n          //success callback\n          console.log(\"data \", data);\n          navigation.navigate('ToDo', {focus: true});\n        })\n        .catch(error => {\n          //error callback\n          console.log(\"error \", error);\n        });\n    }\n\n  return (\n    <View style={styles.containerStyles}>\n        <Text style={styles.textStyles} >\n          What tasks are you planning to complete?\n        </Text>\n        <TextInput\n            style={styles.textInputStyles}\n            multiline\n            numberOfLines={4}\n            value={todo}\n            onChangeText={text => setTodo(text)}\n        />\n         <Button style={styles.buttonStyles} color=\"#F8A05A\" mode=\"outlined\" onPress={() => addTodo()}>\n            Add Todo\n        </Button>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  containerStyles: {\n    flex: 1,\n    padding: 20,\n    backgroundColor: '#fff',\n  },\n  textStyles: {\n    fontSize: 12,\n    color: 'black',\n    fontFamily: 'Rubik'\n  },\n  textInputStyles: {\n    padding: 5,\n    fontFamily: 'Rubik',\n    color: 'grey',\n  },\n  buttonStyles: {\n    marginTop: 10,\n    borderColor: '#F8A05A',\n    borderWidth: 2,\n    color: 'green',\n    fontFamily: 'Rubik'\n  }\n});\n","import 'react-native-gesture-handler';\nimport React, { useEffect, useState } from 'react';\nimport { View, Text, StatusBar } from 'react-native';\nimport {NavigationContainer} from '@react-navigation/native';\n\nimport { providers, firebaseAppAuth } from \"./firebase\";\nimport withFirebaseAuth from \"react-with-firebase-auth\";\n\nimport * as Font from 'expo-font';\nimport {createStackNavigator} from '@react-navigation/stack';\nimport Home from './screens/home';\nimport ToDo from './screens/todo';\nimport AddTodo from './screens/addTodo';\n\nconst Stack = createStackNavigator();\n\nfunction App() {\n\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n      Font.loadAsync({\n          Rubik: require('./assets/fonts/RubikMonoOne-Regular.ttf'),\n      }).then(() => setLoading(false));\n  }, []);\n\n  if(loading) {\n    return (\n      <View>\n        <Text>Loading...</Text>\n      </View>\n    )\n  }\n  return (\n    <>\n      <StatusBar hidden={true} />\n      <NavigationContainer>\n        <Stack.Navigator initialRouteName=\"Home\">\n          <Stack.Screen\n            options={{\n              headerShown: false,\n            }}\n            name=\"Home\"\n            component={Home}\n          />\n          <Stack.Screen\n            name=\"ToDo\"\n            component={ToDo}\n            options={{\n              title: '',\n              headerStyle: {\n                backgroundColor: '#fff',\n                elevation: 0,\n              },\n            }}\n          />\n            <Stack.Screen\n            name=\"AddTodo\"\n            component={AddTodo}\n            options={{\n              title: '',\n              headerStyle: {\n                backgroundColor: '#fff',\n                elevation: 0,\n              },\n            }}\n          />\n        </Stack.Navigator>\n      </NavigationContainer>\n    </>\n  );\n}\n\nexport default withFirebaseAuth({\n  providers,\n  firebaseAppAuth\n})(App);","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function() {\n    navigator.serviceWorker\n      .register('/expo-service-worker.js', { scope: '/' })\n      .then(function(info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function(error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","module.exports = __webpack_public_path__ + \"static/media/avatar.1eef7282.png\";","module.exports = __webpack_public_path__ + \"./fonts/RubikMonoOne-Regular.ttf\";"],"sourceRoot":""}